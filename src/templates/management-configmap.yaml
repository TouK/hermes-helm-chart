apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hermes.management.fullname" . }}
  labels:
    {{- include "hermes.management.labels" . | nindent 4 }}
data:
  management.yaml: |-
    application:
      name: hermes-management

    logging.config: /etc/hermes/logback.xml

    zookeeper:
      enabled: false

    storage:
      pathPrefix: {{ include "hermes.zookeeperRoot" . }}
      clusters:
        -
          datacenter: dc
          clusterName: zk
          connectionString: {{ include "hermes.zookeeperConnectString" . }}

    kafka:
    {{- if .Values.kafkaNamespace }}
      defaultNamespace: {{ tpl .Values.kafkaNamespace . }}
    {{- end }}
      clusters:
        -
          datacenter: dc
          clusterName: primary
          connectionString: {{ include "hermes.zookeeperConnectString" . }}
          connectionTimeout: 10000
          bootstrapKafkaServer: {{ include "hermes.kafkaBootstrapServers" . }}
          kafkaServerRequestTimeoutMillis: 10000

    metrics:
      graphiteHttpUri: graphite:8082
      graphite:
        enabled: true

    server:
      port: {{ .Values.management.service.port }}

    spring:
      jersey:
        type: filter

    management:
      endpoints:
        web:
          base-path: /
      rest-template:
        connect-timeout: 2000
        read-timeout: 2000
      server:
        servlet:
          context-path: /
      health:
        periodSeconds: 30
        enabled: true
      consumer-groups:
        create-manually: true

    audit.enabled: false

    topicOwnerCache:
      refreshRateInSeconds: 300 # 5 minutes

    subscriptionOwnerCache:
      refreshRateInSeconds: 300

    schema:
      repository:
        type: schema_registry
        serverUrl: {{ include "hermes.schemaRegistryUrl" . }}
        subjectSuffixEnabled: true
        subjectNamespaceEnabled: true
        validationEnabled: true

    console:
      configurationLocation: console/config-local.json
      configurationType: classpath_resource
      {{- with .Values.management.console.topic }}
      topic: {{ tpl (toJson .) $ }}
      {{- end }}

    {{- with .Values.management.cors }}
    cors: {{ tpl (toJson .) $ }}
    {{- end }}

    {{- with .Values.management.topic }}
    topic: {{ tpl (toJson .) $ }}
    {{- end }}
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</Pattern>
            </encoder>
        </appender>


        <!-- Selector spams ERROR level messages every 100ms on IOException -->
        <logger name="org.apache.kafka.common.network.Selector" level="OFF"/>
        <logger name="org.apache.zookeeper" level="WARN" />
        <logger name="org.apache.kafka" level="INFO" />
        <logger name="kafka" level="INFO"/>

        <root level="INFO">
            <appender-ref ref="STDOUT" />
        </root>

    </configuration>


  

