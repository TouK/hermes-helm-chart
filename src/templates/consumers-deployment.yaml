apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hermes.consumers.fullname" . }}
  labels:
    {{- include "hermes.consumers.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.consumers.replicaCount }}
  selector:
    matchLabels:
      {{- include "hermes.consumers.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/consumers-configmap.yaml") . | sha256sum }}
      labels:
        {{- include "hermes.consumers.selectorLabels" . | nindent 8 }}
        {{- with .Values.consumers.extraPodLabels -}}
        {{- . | toYaml | nindent 8 -}}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "hermes.consumers.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.consumers.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ template "hermes.name" . }}-{{ .Values.consumers.name }}
          securityContext:
            {{- toYaml .Values.consumers.securityContext | nindent 12 }}
          image: "{{ .Values.consumers.image.repository }}:{{ default ( print "hermes-" .Chart.AppVersion ) .Values.consumers.image.tag }}"
          imagePullPolicy: {{ .Values.consumers.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /etc/hermes
          env:
            - name: HERMES_CONSUMERS_OPTS
              value: -Dspring.config.location=file:///etc/hermes/consumers.yaml,file:///etc/hermes/consumers-secret.yaml -Dlogging.config=/etc/hermes/logback.xml
            - name: JAVA_OPTS
              value: {{ .Values.consumers.javaOpts }}
          {{- with .Values.consumers.extraEnv -}}
            {{- . | toYaml | nindent 12 -}}
          {{- end }}
          envFrom:
            - configMapRef:
                optional: true
                name: {{ default (printf "%s-env" (include "hermes.consumers.fullname" . )) .Values.envConfigMapOverride }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          {{- with .Values.consumers.extraPorts -}}
            {{- . | toYaml | nindent 12 -}}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /status/health
              port: http
            periodSeconds: {{ .Values.consumers.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.consumers.livenessProbe.failureThreshold }}
          startupProbe:
            httpGet:
              path: /status/health
              port: http
            periodSeconds: {{ .Values.consumers.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.consumers.startupProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.consumers.resources | nindent 12 }}
      volumes:
        - name: config
          projected: 
            sources:
            - configMap:
                name: {{ include "hermes.consumers.fullname" . }}
            - secret:
                name: {{ include "hermes.consumers.fullname" . }}-secret
      {{- with .Values.consumers.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.consumers.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.consumers.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
