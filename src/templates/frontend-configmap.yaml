apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hermes.frontend.fullname" . }}
  labels:
    {{- include "hermes.frontend.labels" . | nindent 4 }}
data:
  frontend.properties: |-
    zookeeper.connect.string={{ include "hermes.zookeeperConnectString" . }}
    zookeeper.root={{ include "hermes.zookeeperRoot" . }}

    kafka.broker.list={{ include "hermes.kafkaBootstrapServers" . }}
    kafka.zookeeper.connect.string={{ include "hermes.zookeeperConnectString" . }}
    {{- if .Values.kafkaNamespace }}
    kafka.namespace={{ tpl .Values.kafkaNamespace . }}
    {{- end }}

    kafka.topic.partitions=4
    kafka.topic.replication.factor=1

    schema.repository.serverUrl={{ include "hermes.schemaRegistryUrl" . }}
    schema.repository.subject.suffix.enabled=true
    schema.repository.subject.namespace.enabled=true

    metrics.graphite.reporter=false
    frontend.message.preview.enabled={{ .Values.frontend.preview.enabled }}

{{ range $key, $value := .Values.frontend.additionalConfig }}
  {{ $key | indent 2}}={{ $value }}
{{- end }}
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration scan="true" scanPeriod="5 seconds">

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</Pattern>
            </encoder>
        </appender>

        <logger name="org.apache.zookeeper" level="ERROR" />

        <!--Selector spams ERROR level messages every 100ms on IOException-->
        <logger name="org.apache.kafka.common.network.Selector" level="OFF"/>

        <logger name="kafka" level="WARN"/>

        <root level="INFO">
            <appender-ref ref="STDOUT" />
        </root>

    </configuration>

  
